library(MASS) #fitdistr
xvalue <- seq(-3, 3, length = 100)
probability <-dnorm(xvalue)
probability <-dnorm(xvalue)
probability <-dnorm(xvalue)
probability <-dnorm(xvalue)
probability <-dnorm(xvalue)
sample1 <- rnorm(10)
hist(sample1, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
lines(xvalue, probability) #Add distribution function
sample2 <- rnorm(30)
hist(sample2, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
sample3 <- rnorm(100)
hist(sample3, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
sample4 <- rnorm(1000)
hist(sample4, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
library(DescTools) # Skew, Kurt, Mode
mean(sample4)
median(sample4)
#Mode(sample4)
var(sample4)
sd(sample4) # sqrt(var(values))
source('~/Downloads/EVALUATION/app.R')
Skew(sample4)
Kurt(sample4)
sd(sample4) # sqrt(var(values))
Skew("sample4");
Skew(sample4);
Kurt(sample4)
library(MASS) #fitdistr
s4mean <- fitdistr(sample4, "normal")$estimate[1]
s4sd <- fitdistr(sample4, "normal")$estimate[2]
ks.test(sample4, "pnorm", mean = s4mean, sd = s4sd)
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
data <- c(1,4,5,7,8,9,10,11,12,13,14,15,16);
s4mean <- fitdistr(data, "normal")$estimate[1]
s4sd <- fitdistr(data, "normal")$estimate[2]
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
xvalue <- seq(-3, 3, length = 100)
probability <-dnorm(xvalue)
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120);
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)") #Create Histogram
lines(data, probability);
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120);
probability <- dnorm(data);
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(data, probability);
Kurt(data)
xvalue <- seq(-3, 3, length = 100)
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120);
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
#Estimators
mean(data)
median(data)
Mode(data)
#Mode(data)
var(data)
sd(data) # sqrt(var(values))
Skew(data);
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120);
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
#Estimators
library(DescTools) # Skew, Kurt, Mode
mean(data)
median(data)
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120);
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
#Estimators
library(DescTools) # Skew, Kurt, Mode
mean(data)
median(data)
Mode(data)
var(data)
sd(data) # sqrt(var(values))
Skew(data);
#Regular normal distribution
xvalue <- seq(-3,3, lenght = 100);
#Regular normal distribution
xvalue <- seq(-3, 3, length = 100)
probability <-dnorm(xvalue)
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120)
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
#Estimators
library(DescTools) # Skew, Kurt, Mode
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
install.packages("DescTools")
install.packages("MASS")
install.packages("MASS")
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
library(MASS) #fitdistr
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120)
#Regular normal distribution
xvalue <- seq(-3, 3, length = 100)
probability <-dnorm(xvalue, mean = mean(data), sd = sd(data))
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
probability <- dnorm(xvalue, mean = mean(data), sd = sd(data))
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
mean(data)
median(data)
Mode(data)
var(data)
sd(data) # sqrt(var(values))
Skew(data);
Kurt(data)
s4mean <- fitdistr(data, "normal")$estimate[1]
s4sd <- fitdistr(data, "normal")$estimate[2]
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
probability <- dnorm(xvalue, mean = m, sd = s)
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
library(MASS) #fitdistr
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120)
# Mean & SD
m <- mean(data)
s <- sd(data)
#Regular normal distribution
xvalue <- seq(-3, 3, length = 100)
probability <- dnorm(xvalue, mean = m, sd = s)
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
library(MASS) #fitdistr
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120)
# Mean & SD
m <- mean(data)
s <- sd(data)
#Regular normal distribution
xvalue <- seq(-3, 3, length = 100)
probability <- dnorm(xvalue,m,s)
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
mean(data)
median(data)
Mode(data)
var(data)
sd(data) # sqrt(var(values))
Skew(data);
Kurt(data)
s4mean <- fitdistr(data, "normal")$estimate[1]
s4sd <- fitdistr(data, "normal")$estimate[2]
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
library(MASS) #fitdistr
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120)
# Mean & SD
m <- mean(data)
s <- sd(data)
#Regular normal distribution
xvalue <- seq(100, 220, length = 100)
probability <- dnorm(xvalue,mean = m ,sd = s)
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
library(MASS) #fitdistr
#Data collected
data <- c(160,114,120,139,143,120,154,210,190,205,165,178,124,200,150,120,148,115,170,120)
#Regular normal distribution
xvalue <- seq(100, 220, length = 100)
probability <- dnorm(xvalue,mean = mean(data) ,sd = sd(data))
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
mean(data)
median(data)
#Mode(sample4)
var(data)
sd(data) # sqrt(var(values))
Skew(data)
Kurt(data)
#Fit Distribution
s4mean <- fitdistr(data, "normal")$estimate[1]
s4sd <- fitdistr(data, "normal")$estimate[2]
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
library(MASS) #fitdistr
#Data collected
data <- c(160,120,8139065,129,2439554,143,586211,150,2165104,128,5145906,159,1100248,216,5848563,242,0743687,215,3624851,172,4093965,184,889156,133,7011593,204,7828118,158,113883,131,1830782,153,3101432,127,0472353,174,642492,130)
#Regular normal distribution
xvalue <- seq(100, 220, length = 100)
probability <- dnorm(xvalue,mean = mean(data) ,sd = sd(data))
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
#Estimators
mean(data)
median(data)
#Mode(sample4)
var(data)
sd(data) # sqrt(var(values))
Skew(data)
Kurt(data)
#Fit Distribution
s4mean <- fitdistr(data, "normal")$estimate[1]
s4sd <- fitdistr(data, "normal")$estimate[2]
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
library(MASS) #fitdistr
#Data collected
data <- c(160,120.8139065,129.2439554,143.586211,150.2165104,128.5145906,159.1100248,216.5848563,242.0743687,215.3624851,172.4093965,184.889156,133.7011593,204.7828118,158.113883,131.1830782,153.3101432,127.0472353,174.642492,130)
#Regular normal distribution
xvalue <- seq(100, 220, length = 100)
probability <- dnorm(xvalue,mean = mean(data) ,sd = sd(data))
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
#Estimators
mean(data)
median(data)
#Mode(sample4)
var(data)
sd(data) # sqrt(var(values))
Skew(data)
Kurt(data)
#Fit Distribution
s4mean <- fitdistr(data, "normal")$estimate[1]
s4sd <- fitdistr(data, "normal")$estimate[2]
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
#Estimators
mean(data)
median(data)
#Mode(sample4)
var(data)
sd(data) # sqrt(var(values))
Skew(data)
Kurt(data)
#Fit Distribution
s4mean <- fitdistr(data, "normal")$estimate[1]
s4sd <- fitdistr(data, "normal")$estimate[2]
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
#
#
# Lecture - Example
#
#
library(DescTools) # Skew, Kurt, Mode
library(MASS) #fitdistr
#Data collected
data <- c(160,120.8139065,129.2439554,143.586211,150.2165104,128.5145906,159.1100248,216.5848563,242.0743687,215.3624851,172.4093965,184.889156,133.7011593,204.7828118,158.113883,131.1830782,153.3101432,127.0472353,174.642492,130)
#Regular normal distribution
xvalue <- seq(120, 260, length = 100)
probability <- dnorm(xvalue,mean = mean(data) ,sd = sd(data))
#Histogram
hist(data, freq = FALSE, main ="", xlab = "Parameter", ylab = "Frequency (relative)")
lines(xvalue, probability)
#Estimators
mean(data)
median(data)
#Mode(sample4)
var(data)
sd(data) # sqrt(var(values))
Skew(data)
Kurt(data)
#Fit Distribution
s4mean <- fitdistr(data, "normal")$estimate[1]
s4sd <- fitdistr(data, "normal")$estimate[2]
ks.test(data, "pnorm", mean = s4mean, sd = s4sd)
load("~/Downloads/EVALUATION/.RData")
movie_metadata <- read.csv("~/Downloads/movie_metadata.csv", header=FALSE, row.names=1)
View(movie_metadata)
movie_metadata <- read.csv("~/Downloads/movie_metadata.csv", header=FALSE)
View(movie_metadata)
source('~/Desktop/Shiny/Movies/app.R')
input$file1
input$file1
inFile <- readRDS("data/counties.rds")
mydata <- reactive({
inFile <- readRDS("data/counties.rds")
if (is.null(inFile))
return(NULL)
})
inFile <- "data/counties.rds"
if (is.null(inFile))
return(NULL)
tbl <- read.csv(inFile$datapath, header=input$header, sep=input$sep,  dec = input$dec)
inFile <- "data/movies.csv"
if (is.null(inFile))
return(NULL)
tbl <- read.csv(inFile$datapath, header=input$header, sep=input$sep,  dec = input$dec)
tbl <- read.csv("data/movies.csv", header=input$header, sep=input$sep,  dec = input$dec)
install.packages("shiny")
library(shiny)
runGist(9737637)
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
shiny::runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Desktop/Shiny/moviess')
runApp('~/Downloads/dfcf6ab2339b1cf19b090cfb8dadc855-d6b575d8891d5a0205c3b13d6b1ad2a2a9d9c9c2/example.R')
View(inFile)
runApp('~/Downloads/dfcf6ab2339b1cf19b090cfb8dadc855-d6b575d8891d5a0205c3b13d6b1ad2a2a9d9c9c2/example.R')
runApp('~/Downloads/dfcf6ab2339b1cf19b090cfb8dadc855-d6b575d8891d5a0205c3b13d6b1ad2a2a9d9c9c2/example.R')
shiny::runApp('~/Desktop/Shiny/test-movies')
shiny::runApp('~/Desktop/Shiny/test-movies')
shiny::runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
shiny::runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
shiny::runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
runApp('~/Downloads/Interactive-Visual-Analysis-Tool')
movies <- readRDS("data/movies.rds")
setwd("~/Downloads/Interactive-Visual-Analysis-Tool")
setwd("~/Downloads/Interactive-Visual-Analysis-Tool")
movies <- readRDS("data/movies.rds")
runApp()
runApp()
